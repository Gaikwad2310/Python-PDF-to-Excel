import os

def generate_possible_quarter_formats(quarter, year):
    """Generate possible folder name formats for a given quarter and year."""
    q = quarter.upper().replace(" ", "").replace("_", "").replace("-", "")
    y = str(year)
    yy = y[-2:]

    return {
        f"{q}{yy}",      # Q125
        f"{y}Q{q[1]}",   # 2025Q1
        f"{q}_{yy}",     # Q1_25
        f"{q}_{y}",      # Q1_2025
        f"{yy}Q{q[1]}",  # 25Q1
        f"{q[1]}Q{yy}",  # 1Q25
    }

def find_monitoring_pdfs(master_folder, model_quarter_year_dict):
    """Find PDFs using model_id => {quarters, years} mapping."""
    matching_pdfs = []

    for root, dirs, files in os.walk(master_folder):
        folder_name = os.path.basename(root).lower()

        # Check for any model ID present in this folder
        for model_id, filters in model_quarter_year_dict.items():
            if model_id.lower() in folder_name:
                quarters = filters.get("quarters", [])
                years = filters.get("years", [])
                
                # All valid folder name formats for this model
                valid_formats = set()
                for year in years:
                    for quarter in quarters:
                        valid_formats.update(generate_possible_quarter_formats(quarter, year))

                # Search in "monitoring" subfolder
                for dir_name in dirs:
                    if "monitoring" in dir_name.lower():
                        monitoring_path = os.path.join(root, dir_name)

                        for subfolder in os.listdir(monitoring_path):
                            if subfolder in valid_formats:
                                quarter_path = os.path.join(monitoring_path, subfolder)
                                if os.path.isdir(quarter_path):
                                    for file in os.listdir(quarter_path):
                                        if file.lower().endswith(".pdf") and "mon" in file.lower():
                                            matching_pdfs.append(os.path.join(quarter_path, file))
                                            
    return matching_pdfs
