# pip install pandas
# pip install numpy
# pip install camelot-py[cv]
# Also install ghost script from here:https://ghostscript.com/releases/gsdnld.html
# pip install ghostscript
# pip install os
# pip install tabula-py
# pip install pymupdf

import tabula as tb
import pandas as pd
import os
import camelot
from tabula.io import read_pdf
import numpy as np
import fitz

def isNaN(num):
    return num!=num

#Insert the path of the file containing the PDFs in directory
directory = 'C:\\Users\\91998\\Documents\\Python\\PDF to Excel\\PDF'
i=0
for filename in os.listdir(directory):
    i=i+1
    print(i)
    f = os.path.join(directory, filename)
    if os.path.isfile(f):
        print(f)

directory = 'C:\\Users\\91998\\Documents\\Python\\PDF to Excel\\PDF'
j=0
for filename in os.listdir(directory):
    j=j+1
    f = os.path.join(directory, filename)
    print("PDF Number: ", j)
    try:
        tb.convert_into(f,"Sample.csv", output_format="csv", pages="all")
        df = pd.read_csv("Sample.csv")
        z=0
        a=len(df)
        for i in range(0,a):
            print("Row Number: ",i)
            if(isNaN(df[df.columns.values[0]][i])):
                print("Nan")
                if(z==3):
                    z=0
                if(isNaN(df[df.columns.values[5]][i])==0):
                    df[df.columns.values[5]][i-z] = df[df.columns.values[5]][i-z] + df[df.columns.values[5]][i]
                if(isNaN(df[df.columns.values[7]][i])==0):
                    df[df.columns.values[7]][i-z] = df[df.columns.values[7]][i-z] + df[df.columns.values[7]][i]
                df.drop(i,axis=0,inplace=True)
    except:
        try:
            file_handle = fitz.open(f)
            page=0
            file_handle.delete_page(page)
            file_handle.save('Solved.pdf')
            tables = camelot.read_pdf('Solved.pdf')
            df = tables[0].df
            try:
                df[4][1]=df[5][1].split('Yoga')[0]
                df[5][1]='Yoga'+df[5][1].split('Yoga')[1]
            except:
                df[5][1]='Yoga'+df[4][1].split('Yoga')[1]
                df[4][1]=df[4][1].split('Yoga')[0]
            try:
                df[9][1]=df[10][1].split('Yoga')[0]
                df[10][1]='Yoga'+df[10][1].split('Yoga')[1]
            except:
                df[10][1]='Yoga'+df[9][1].split('Yoga')[1]
                df[9][1]=df[9][1].splt('Yoga')[0]
            try:
                df[12][1]=''+df[13][1].split()[0]
                df[13][1]=''+df[13][1].split()[1]
            except:
                df[13][1]='Yoga'+df[12][1].split('Yoga')[1]
                df[12][1]=df[12][1].splt('Yoga')[0]
            try:
                df[0][1]=''+df[1][1].split()[0]
                df[1][1]=''+df[1][1].split()[1]
            except:
                df[1][1]=''+df[0][1].split()[1]
                df[0][1]=''+df[0][1].split()[0]
        except:
            print("Empty")
    df.to_csv("Result_"+str(j)+".csv", index=False)

df3 = pd.DataFrame()
k=1
for i in range(1,j+1):
    print(i)
    df = pd.read_csv("Result_"+str(i)+".csv")
    k=k+len(df)-1
    try:
        for l in range(0,20):
            df.columns.values[l]=l
    except:
        print("Problem in PDF: ", i)
        print("In Row: ", k)
    df3 = pd.concat([df3,df],axis=0,ignore_index = True)

#If there is an output of problem in row means the data is not extracted properly, kindly do it manually from the pdf
#Row number is in output excel, by pdf number check the pdf from output above(fourth output from the top of the code)

for i in range(1,len(df3)):
    if(df3[df3.columns.values[0]][i]=='Month'):
        df3.drop(i,axis=0,inplace=True)

df3.to_csv("Result_Final.csv")
